<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>c语言</title>
      <link href="/2024/02/27/c%E8%AF%AD%E8%A8%80/"/>
      <url>/2024/02/27/c%E8%AF%AD%E8%A8%80/</url>
      
        <content type="html"><![CDATA[<h2 id="第一章">第一章</h2><ol type="1"><li><p>C语言的特点： （1）语言简洁、紧凑、使用方便灵活，32个关键字、9种控制语句。 （2）运算符丰富---34种。 （3）数据类型丰富，具有现代语言的各种数据结构。 （4）具有结构化的控制语句，是完全模块化和结构化的语言。 （5）语法限制不严格，程序设计自由度大。 （6）允许直接访问物理地址，能进行位操作，能实现汇编语言的大部分功能，可直接对硬件进行操作。兼有高级和低级语言的特点。 （7）目标代码质量高，程序执行效率高。只比汇编程序生成的目标代码效率低10%-20%。 （8）程序可移植性好（与汇编语言比）。 （9）C语言具有预处理功能。</p></li><li><p>运行C程序的步骤： （1）上机输入与编辑源程序。 （2）对源程序进行编译。 （3） 与库函数连接。 （4）运行目标程序。</p></li><li><p>算法的特性： （1）有穷性：包含有限的操作步骤。 （2）确定性：算法中的每一个步骤都应当是确定的。 （3）有零个或多个输入：输入是指在执行算法时需要从外界取得必要的信息 （4）有一个或多个输出：算法的目的是为了求解，解〞就是输出 （5）有效性：算法中的每一个步骤都应当能有效地执行，并得到确定的结果。</p></li><li><p>采取以下方法来保证得到结构化的程序： （1）自顶向下； （2）逐步细化； （3）模块化设计； （4）结构化编码。</p></li></ol><h2 id="第二-八章">第二-八章</h2><ol type="1"><li>数据类型</li></ol><ul><li>int char float double</li><li>结构体struct 联合 union 枚举enum</li><li>ASCII '0'=48 'A'=65 'a'=97</li><li>'a'是字符常量，"A"是字符串常量。</li><li>str1="china" str1=str2 均为不合法的（str1，str2为字符数组）</li><li>变量初值 int a=b= 3错误，需要分别赋值。</li></ul><ol start="2" type="1"><li><p>字符串处理函数： （1）strcat (string1,string2)---2接到1后面，返回1的地址 （2）strcpy(string1,string2,n)---2复制到1，n可选数字 （3） strcmp (string1,string2)---比较1和2大小，相等返回0，1&gt;2返回正数，2&gt;1返回负数 （4）strlen 不包括'\0' （5）strlwr 英文字母大写变小写 strupr 英文字母小写变大写</p></li><li><p>存储类型： （1）auto （2）static 局部只赋值一次，函数结束后仍然存在 || 本文件引用而不能其他文件引用<br>（2）register 快 （2）extern 外部变量</p></li><li><p>C语言为什么要先定义后使用： （1）编译系统会根据定义为变量分配内存空间，分配空间的大小与数据类 型有关。 （2）系统可以根据变量的类型检查对该变量的运算是否合法，这样就给程序员调试 程序带来方便。</p></li><li><p>格式输入输出： （1）输出：printf(),puts(),putchar() （2）输入：scanf(),gets(),getchar() （3）%u，%c，%s，%f，%e，%g，%d，%ld，%m.nd</p></li></ol><h2 id="重点课后习题个人认为">重点课后习题（个人认为）</h2><ol type="1"><li></li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stdio.h&quot;</span></span></span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> x;</span><br><span class="line">x= −<span class="number">30</span> + <span class="number">4</span>*<span class="number">7</span>–<span class="number">24</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;x=%d\n&quot;</span>，x);</span><br><span class="line">x= −<span class="number">30</span>*<span class="number">5</span>%−<span class="number">8</span>;<span class="comment">//负数也能取余</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;x=%d\n&quot;</span>，x);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*答：x=−26</span></span><br><span class="line"><span class="comment">     x=−6。第二个运算是取余操作。*/</span></span><br></pre></td></tr></table></figure><ol start="2" type="1"><li></li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//若x=13，y=20，z=4，下列各表达式的结果是什么？</span></span><br><span class="line">（<span class="number">1</span>）（z&gt;=y&gt;=x）?<span class="number">1</span>:<span class="number">0</span></span><br><span class="line">（<span class="number">2</span>）z&gt;=y&amp;&amp;y&gt;=x</span><br><span class="line">（<span class="number">3</span>）!(x&lt;y)&amp;&amp;!x||z</span><br><span class="line">（<span class="number">4</span>）x&lt;y?x++:++y</span><br><span class="line">（<span class="number">5</span>）z+=x&gt;y?x++:++y<span class="comment">//等价于z=z+x&gt;y?x++:++y</span></span><br><span class="line"><span class="comment">/*答：（1）0； （2）0； （3）1； （4）13； （5）25。</span></span><br><span class="line"><span class="comment">本题需要注意的是：（4）中，注意自加操作的前缀和后缀；（5）中&quot;?&quot;优先级大于赋值，</span></span><br><span class="line"><span class="comment">所以先进行条件运算再赋值*/</span></span><br></pre></td></tr></table></figure><ol start="3" type="1"><li></li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> ″stdio.h″</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//多次可能修改变量值时记得及时更新，一步一步仔细一点</span></span><br><span class="line"><span class="type">int</span> x,y,z;</span><br><span class="line">x=y=z=<span class="number">1</span>;</span><br><span class="line">x+=y+=z;</span><br><span class="line"><span class="built_in">printf</span>(″(<span class="number">1</span>)％d\n″,x&lt;y?y: x);</span><br><span class="line"><span class="built_in">printf</span>(″(<span class="number">2</span>)％d\n″,x&lt;y?x++:y++);</span><br><span class="line"><span class="built_in">printf</span>(″x=％d,y=%d\n″,x,y);</span><br><span class="line"><span class="built_in">printf</span>(″(<span class="number">3</span>)％d\n″,z+=x&lt;y?x++:y++);</span><br><span class="line"><span class="built_in">printf</span>(″x=％d,y=%d,z=%d\n″,x,y,z);</span><br><span class="line">x=<span class="number">5</span>;</span><br><span class="line">y=z=<span class="number">6</span>;</span><br><span class="line"><span class="built_in">printf</span>(″(<span class="number">4</span>)%d\n″,(z&gt;=y&gt;=x)?<span class="number">1</span>:<span class="number">0</span>);</span><br><span class="line"><span class="built_in">printf</span>(″(<span class="number">5</span>)%d\n″,z&gt;=y&amp;&amp;y&gt;=x);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*答：（1）3</span></span><br><span class="line"><span class="comment">（2）2</span></span><br><span class="line"><span class="comment">x=3,y=3</span></span><br><span class="line"><span class="comment">（3）4</span></span><br><span class="line"><span class="comment">x=3,y=4,z=4</span></span><br><span class="line"><span class="comment">（4）0</span></span><br><span class="line"><span class="comment">（5）1*/</span></span><br></pre></td></tr></table></figure><ol start="4" type="1"><li></li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//编写一个程序，输入两个整数i 和j，显示i 的第j 个二进制位。</span></span><br><span class="line"><span class="comment">/*解题思路：本题常规的解法有两种，一是求出i 的二进制再移位，二是将一个第j 位是</span></span><br><span class="line"><span class="comment">1 其余位是0 的二进制数与i 取与操作。作者将第二种方法列出，第一种方法请读者设计。</span></span><br><span class="line"><span class="comment">参考程序：*/</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line">main ()</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> i,j;</span><br><span class="line"><span class="type">int</span> flag=<span class="number">1</span>; <span class="comment">//定义一个中间量</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Please input two integers:&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d,%d&quot;</span>,&amp;i,&amp;j);</span><br><span class="line">flag=flag&lt;&lt;j; <span class="comment">//flag 变成了一个第j 位是1 其余位是0 的二进制数</span></span><br><span class="line"><span class="keyword">if</span>(flag&amp;i)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;The %dth bit of %d is:1\n&quot;</span>,j,i);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;The %dth bit of %d is:0\n&quot;</span>,j,i);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="5" type="1"><li></li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*** N 盏灯排成一排，从1 到N 依次编号。有N 个人也从1 到N 依次编号。第一个</span></span><br><span class="line"><span class="comment">人（1 号）将灯全部打开，第二个人（2 号）将凡是2 和2 的倍数的灯关闭。第三个人（3</span></span><br><span class="line"><span class="comment">号）将凡是3 和3 的倍数的灯做相反处理（即将打开的灯关闭，关闭的灯打开），以后的人</span></span><br><span class="line"><span class="comment">都和3 号一样，将凡是与自己编号相同的灯和是自己编号倍数的灯做相反处理，请问当第N</span></span><br><span class="line"><span class="comment">个人操作之后，哪几盏灯是点亮的？试编程求解这个问题，N 由键盘输入。***/</span></span><br><span class="line"><span class="comment">//参考程序：</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MaxN 1000<span class="comment">//定义一个最大的处理数，暂时定为1000</span></span></span><br><span class="line">main()</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> Lamp[MaxN+<span class="number">1</span>]=&#123;<span class="number">0</span>&#125;;<span class="comment">//初始化每盏灯的状态，0 为关闭，1 为打开</span></span><br><span class="line"><span class="type">int</span> n;<span class="comment">//定义灯数量</span></span><br><span class="line"><span class="type">int</span> i,j;<span class="comment">//定义循环变量</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请输入灯数量:&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);<span class="comment">//输入灯数量</span></span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line"><span class="keyword">for</span>(j=i;j&lt;=n;j=j+i)</span><br><span class="line">Lamp[j]=<span class="number">1</span>−Lamp[j];<span class="comment">//参考程序分析</span></span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line"><span class="keyword">if</span>(Lamp[i]==<span class="number">1</span>)<span class="comment">//判断灯是否打开</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;第%d 盏灯是亮的\n&quot;</span>,i);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="6" type="1"><li></li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**所谓幻方，就是一个n 行n 列的正方形，当n 为奇数时，称为奇数阶幻方。共有</span></span><br><span class="line"><span class="comment">n2 个格子，将1，2，3，…，n2 这些数字放到这些格子里，使其每行的和、每列的和及两</span></span><br><span class="line"><span class="comment">条对角线的和都是一个相同的数。试编程由键盘输入一个奇数n，输出一个n 阶幻方。</span></span><br><span class="line"><span class="comment">解题思路：首先我们将主教材的算法提示按步分解。</span></span><br><span class="line"><span class="comment">（1）定义一个数组a[n][n]来存储n 阶幻方，这里n 为奇数，数组各元素的初值均为0，</span></span><br><span class="line"><span class="comment">表示该位置上还没有填数；</span></span><br><span class="line"><span class="comment">（2）用一个整型变量k 来表示当前要赋的数，按题意k 将开始从1 到n2 循环，因为n</span></span><br><span class="line"><span class="comment">阶幻方将有n2 个数；</span></span><br><span class="line"><span class="comment">（3）定义整型变量i，j 表示要赋值的行号和列标，i 初值为0，j 初值为n/2，表示第一</span></span><br><span class="line"><span class="comment">个数要放在第一行中间的那个格子里；</span></span><br><span class="line"><span class="comment">（4）填数字开始，k 开始循环，完成下面的（5）到（10）；</span></span><br><span class="line"><span class="comment">（5）先将k 赋到相应的位置，即将a[i][j]赋为k，再将i，j 的值分别用整型变量iold</span></span><br><span class="line"><span class="comment">和jold 暂时保存，注意是暂时；</span></span><br><span class="line"><span class="comment">（6）将i 的值减1，j 的值增1，表示后一个数放在这个数的右上格；</span></span><br><span class="line"><span class="comment">（7）如果i&lt;0 且j&lt;n ，即右上格从上面超出，则i=n−1，表示后一数放到与右上格同</span></span><br><span class="line"><span class="comment">列的最后一行；</span></span><br><span class="line"><span class="comment">（8）如果i&gt;=0，且j&gt;=n，即右上格从右面超出，则j=0，表示后一数放到与右上格同</span></span><br><span class="line"><span class="comment">行的第一列；</span></span><br><span class="line"><span class="comment">（9）如果i&lt;0 且j&gt;=n，即右上格既从右面超出又从上面超出，则将后一数放在前一数</span></span><br><span class="line"><span class="comment">的下面，即i=1，j=n−1；</span></span><br><span class="line"><span class="comment">（10）如果a[i][j]&gt;0，即右上格已被数字填充，则后一数放在前一数的下面，即i=iold+1，</span></span><br><span class="line"><span class="comment">j=jold。</span></span><br><span class="line"><span class="comment">参考程序：**/</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> n = <span class="number">5</span>;<span class="comment">//定义待幻方的阶次，按题目要求，应该为奇数，暂定为5</span></span><br><span class="line"></span><br><span class="line">main()</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> a[n][n] = &#123; <span class="number">0</span> &#125;;<span class="comment">//定义数组并初始化，表示该幻方</span></span><br><span class="line"><span class="type">int</span> k = <span class="number">1</span>;<span class="comment">//定义赋值的数，从1 到25</span></span><br><span class="line"><span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> j = n / <span class="number">2</span>;</span><br><span class="line"><span class="type">int</span> iold, jold;<span class="comment">//存储旧的行号和列标</span></span><br><span class="line"><span class="type">int</span> maxk = n * n;<span class="comment">//定义循环的结束值</span></span><br><span class="line"><span class="keyword">for</span> (k = <span class="number">1</span>; k &lt;= maxk; k++)<span class="comment">//对每一个要赋值的数循环</span></span><br><span class="line">&#123;</span><br><span class="line">a[i][j] = k;</span><br><span class="line">iold = i;</span><br><span class="line">jold = j;</span><br><span class="line">i = i - <span class="number">1</span>; <span class="comment">//向上移一行</span></span><br><span class="line">j = j + <span class="number">1</span>; <span class="comment">//向右移一列，以上两语句实现移到右上格</span></span><br><span class="line"><span class="keyword">if</span> (i &gt;= <span class="number">0</span> &amp;&amp; j &gt;= n)<span class="comment">//从右边超出</span></span><br><span class="line">j = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (i &lt; <span class="number">0</span> &amp;&amp; j &lt; n)<span class="comment">//从上面超出</span></span><br><span class="line">i = n - <span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (i &lt; <span class="number">0</span> &amp;&amp; j &gt;= n)<span class="comment">//从右和上同时超出</span></span><br><span class="line">&#123;</span><br><span class="line">i = <span class="number">1</span>;</span><br><span class="line">j = n - <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (a[i][j] &gt; <span class="number">0</span>)<span class="comment">//右上格已经被填充</span></span><br><span class="line">&#123;</span><br><span class="line">i = iold + <span class="number">1</span>;</span><br><span class="line">j = jold;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; i++)<span class="comment">//输出</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; n; j++)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\t&quot;</span>, a[i][j]);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*输出结果即是书上的五阶幻方。</span></span><br><span class="line"><span class="comment">程序分析：本题看起来很难，初学者往往无从下手。但经过算法提示并仔细分析后发现，</span></span><br><span class="line"><span class="comment">程序并不难。以下方法可以帮助大家解决较难的问题：</span></span><br><span class="line"><span class="comment">（1）仔细分析题目，提出一个合理的算法。</span></span><br><span class="line"><span class="comment">（2）将算法分解为独立的步骤，并用自然语言描述。</span></span><br><span class="line"><span class="comment">（3）将（2）中的结果用C 语言进行设计。</span></span><br><span class="line"><span class="comment">（4）编译、执行和结果分析，如果算法不对，再重复执行以上过程。</span></span><br><span class="line"><span class="comment">另外，在输出语句中，也和一般的数组的输出语句不同，主要是&#123;&#125;的位置有所区别。所</span></span><br><span class="line"><span class="comment">以，合理地使用&#123;&#125;也能对程序的运行结果有很大影响。*/</span></span><br></pre></td></tr></table></figure><ol start="7" type="1"><li></li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//编写一个学生管理系统（以下省略）</span></span><br><span class="line"><span class="comment">/***算法分析：这是结构数组的一个简单应用，只需按顺序将学生的信息输入到结构数组中，</span></span><br><span class="line"><span class="comment">并在输入的同时判断并存储各门课程的平均成绩、最高分和最低分，在输入完成后再按顺序</span></span><br><span class="line"><span class="comment">判断并输出得到最高分的学生的信息。需注意的是结构数组的长度要大于学生人数的最大</span></span><br><span class="line"><span class="comment">值，以免出现数组越界错误。***/</span></span><br><span class="line"><span class="comment">//参考程序：</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">date</span> // 结构<span class="title">date</span> 用于表示日期信息</span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="type">int</span> year; <span class="comment">// 年</span></span><br><span class="line"><span class="type">int</span> month; <span class="comment">// 月</span></span><br><span class="line"><span class="type">int</span> day; <span class="comment">// 日</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">student</span> // 定义结构<span class="title">student</span> 表示学生信息</span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="type">char</span> name[<span class="number">20</span>]; <span class="comment">// 姓名</span></span><br><span class="line"><span class="type">int</span> sex; <span class="comment">// 性别</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">date</span> <span class="title">birthday</span>;</span> <span class="comment">// 生日</span></span><br><span class="line"><span class="type">double</span> height; <span class="comment">// 身高</span></span><br><span class="line"><span class="type">double</span> C; <span class="comment">// C 语言成绩</span></span><br><span class="line"><span class="type">double</span> Calculous; <span class="comment">// 微积分成绩</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> MaxStudent = <span class="number">50</span>; <span class="comment">// 最大学生人数</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> <span class="comment">// 主函数</span></span><br><span class="line">&#123; <span class="comment">// 主函数开始</span></span><br><span class="line">student stus[MaxStudent + <span class="number">1</span>]; <span class="comment">//定义stus 用于存储所有学生的信息</span></span><br><span class="line">    <span class="type">int</span> n ,i = <span class="number">0</span>; <span class="comment">// n 为学生人数，i 为循环变量</span></span><br><span class="line"><span class="type">double</span> avgC = <span class="number">0</span>, maxC = <span class="number">0</span>, minC = <span class="number">100</span>; <span class="comment">// C 语言平均成绩、最高分、最低分</span></span><br><span class="line"><span class="type">double</span> avgCal = <span class="number">0</span>, maxCal = <span class="number">0</span>, minCal = <span class="number">100</span>; <span class="comment">// 微积分平均成绩、最高分、最低分</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请输入学生人数（&lt;=%d）: &quot;</span>, MaxStudent);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; i++) <span class="comment">// 按顺序输入各同学的信息</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请输入第%d 位同学的信息：\n&quot;</span>, i+<span class="number">1</span></span><br><span class="line">);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;姓名:\t\t&quot;</span>); <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, stus[i].name); <span class="comment">// 输入姓名</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;性别(1 男0 女):\t&quot;</span>); <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;stus[i].sex); <span class="comment">// 输入性别</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;生日:\n&quot;</span>); <span class="comment">// 输入生日</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\t年: &quot;</span>); <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;stus[i].birthday.year);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\t月: &quot;</span>); <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;stus[i].birthday.month);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\t日: &quot;</span>); <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;stus[i].birthday.day);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;身高(m): \t&quot;</span>); <span class="built_in">scanf</span>(<span class="string">&quot;%lf&quot;</span>, &amp;stus[i].height); <span class="comment">// 输入身高</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;C语言成绩: \t&quot;</span>); <span class="built_in">scanf</span>(<span class="string">&quot;%lf&quot;</span>, &amp;stus[i].C); <span class="comment">// 输入C 语言成绩</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;微积分成绩: \t&quot;</span>); <span class="built_in">scanf</span>(<span class="string">&quot;%lf&quot;</span>, &amp;stus[i].Calculous); <span class="comment">// 输入微积分成绩</span></span><br><span class="line">avgC = avgC + stus[i].C; <span class="comment">// 累加C 的成绩</span></span><br><span class="line">avgCal = avgCal + stus[i].Calculous; <span class="comment">// 累加微积分的成绩</span></span><br><span class="line"><span class="keyword">if</span> (maxC &lt; stus[i].C)maxC = stus[i].C; <span class="comment">// 统计C 语言的最高分</span></span><br><span class="line"><span class="keyword">if</span> (minC &gt; stus[i].C)minC = stus[i].C; <span class="comment">// 统计C 语言的最低分</span></span><br><span class="line"><span class="keyword">if</span> (maxCal &lt; stus[i].Calculous)maxCal = stus[i].Calculous;</span><br><span class="line"><span class="keyword">if</span> (maxCal &gt; stus[i].Calculous)minCal = stus[i].Calculous;</span><br><span class="line">&#125;</span><br><span class="line">avgC = avgC / n; <span class="comment">// 计算C 语言平均分</span></span><br><span class="line">avgCal = avgCal / n; <span class="comment">// 计算微积分平均分</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n 课程\t%8s\t%8s\t%8s\n&quot;</span>, <span class="string">&quot;平均分&quot;</span>, <span class="string">&quot;最高分&quot;</span>, <span class="string">&quot;最低分&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;C\t%8.4f\t%8.4f\t%8.4f\n&quot;</span>, avgC, maxC, minC);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;最高分学生信息:\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%10s\t 性别\t%14s\t%8s\t%8s\n&quot;</span>, <span class="string">&quot;姓名&quot;</span>, <span class="string">&quot;生日&quot;</span>, <span class="string">&quot;C&quot;</span>, <span class="string">&quot;微积分&quot;</span>);</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">fabs</span>(stus[i].C-maxC) &lt;= <span class="number">1e-6</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%10s\t%2d\t%4d 年%2d 月%2d 日\t%8.4f\t%8.4f\n&quot;</span>,</span><br><span class="line">stus[i].name, stus[i].sex, stus[i].birthday.year,</span><br><span class="line">stus[i].birthday.month, stus[i].birthday.day, stus[i].C,</span><br><span class="line">stus[i].Calculous);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n 微积分\t%8.4f\t%8.4f\t%8.4f\n&quot;</span>, avgCal, maxCal, minCal);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;最高分学生信息:\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%10s\t 性别\t%14s\t%8s\t%8s\n&quot;</span>, <span class="string">&quot;姓名&quot;</span>, <span class="string">&quot;生日&quot;</span>, <span class="string">&quot;C&quot;</span>, <span class="string">&quot;微积分&quot;</span>);</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">fabs</span>(stus[i].Calculous-maxCal) &lt;= <span class="number">1e-6</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%10s\t%2d\t%4d 年%2d 月%2d 日\t%8.4f\t%8.4f\n&quot;</span>,</span><br><span class="line">stus[i].name, stus[i].sex, stus[i].birthday.year,</span><br><span class="line">stus[i].birthday.month, stus[i].birthday.day, stus[i].C,</span><br><span class="line">stus[i].Calculous);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="8" type="1"><li></li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//用一个数组存放图书的信息，每本书包含书名、作者、出版年月、出版社、借出数目、库存数目等信息。编写程序存放若干本书的信息，按书名排序后输出。</span></span><br><span class="line"><span class="comment">/*算法分析：虽然题目的要求是用数组，但实际上本题最关键的地方不仅是数组，还需要</span></span><br><span class="line"><span class="comment">结构来表示每本书的信息，这些信息都是由不同类型的数据组成，定义的时候需要考虑变量</span></span><br><span class="line"><span class="comment">类型。*/</span></span><br><span class="line"><span class="comment">//参考程序：</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> MaxNum = <span class="number">10</span>;<span class="comment">//定义一个最大数量，暂定为10</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">BookInfo</span>//定义一本书的信息</span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="type">char</span> name[<span class="number">100</span>];</span><br><span class="line"><span class="type">char</span> author[<span class="number">20</span>];</span><br><span class="line"><span class="type">char</span> publishdate[<span class="number">20</span>];</span><br><span class="line"><span class="type">char</span> publisher[<span class="number">100</span>];</span><br><span class="line"><span class="type">int</span> brownum;</span><br><span class="line"><span class="type">int</span> stornum;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">BookInfo</span> <span class="title">books</span>[<span class="title">MaxNum</span> + 1];</span></span><br><span class="line"><span class="type">int</span> i;</span><br><span class="line"><span class="type">int</span> j;</span><br><span class="line"><span class="type">int</span> changed = <span class="number">0</span>;<span class="comment">//标志位</span></span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= MaxNum; i++)<span class="comment">//输入各个书的信息</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n 请输入第%d 本书的信息：\n&quot;</span>, i);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;书名：\n&quot;</span>);</span><br><span class="line">gets(books[i].name);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;作者：\n&quot;</span>);</span><br><span class="line">gets(books[i].author);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;出版日期：\n&quot;</span>);</span><br><span class="line">gets(books[i].publishdate);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;出版社：\n&quot;</span>);</span><br><span class="line">gets(books[i].publisher);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;借出数量：\n&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;books[i].brownum);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;库存数量：\n&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;books[i].stornum);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">1</span>; i &lt; MaxNum; i++)</span><br><span class="line">&#123;</span><br><span class="line">changed = <span class="number">0</span>;<span class="comment">//初始本次循环未交换</span></span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">1</span>; j &lt; MaxNum<span class="number">-1</span>; j++)</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">strcmp</span>(books[j].name, books[j + <span class="number">1</span>].name) &gt; <span class="number">0</span>)<span class="comment">//比较，如果逆序则交换</span></span><br><span class="line">&#123;</span><br><span class="line">books[<span class="number">0</span>] = books[j];</span><br><span class="line">books[j] = books[j + <span class="number">1</span>];</span><br><span class="line">books[j + <span class="number">1</span>] = books[<span class="number">0</span>];</span><br><span class="line">changed = <span class="number">1</span>;<span class="comment">//交换标志</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (changed == <span class="number">0</span>)</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= MaxNum; i++)<span class="comment">//按交换后的结果输出</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;书名:\t%s\n&quot;</span>, books[i].name);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;作者:\t%s\n&quot;</span>, books[i].author);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;出版日期:\t%s\n&quot;</span>, books[i].publishdate);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;出版社:\t%s\n&quot;</span>, books[i].publisher);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;借出数量:\t%d\n&quot;</span>, books[i].brownum);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;库存数量:\t%d\n&quot;</span>, books[i].stornum);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="9" type="1"><li></li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//保龄球计分问题。（以下省略）</span></span><br><span class="line"><span class="comment">/*算法分析：本题可以对轮次进行循环，依次求出一局中各轮的分数。在每一轮中如果第</span></span><br><span class="line"><span class="comment">一次滚出10 分，则其得分与下两次滚球的分数相关；如果第一次未滚出10 分，则两次滚得</span></span><br><span class="line"><span class="comment">的分数之和如果不为10，则本轮得分即为两次滚得的分数之和；否则，本轮得分与下一轮</span></span><br><span class="line"><span class="comment">的得分有关。因为一轮的得分与其是strike、spare 还是normal 的状态有关，因此需用变量</span></span><br><span class="line"><span class="comment">存储。又因为一轮的得分最多只与其后两轮的得分有关，因此只需用两个变量来存储当前轮</span></span><br><span class="line"><span class="comment">的前两轮的状态即可。</span></span><br><span class="line"><span class="comment">因此各轮得分的计算方法是，先求出第1、2 轮的暂时得分和状态，再从第3 轮开始，</span></span><br><span class="line"><span class="comment">依次计算本轮前两轮的得分及本轮的暂时得分和状态，当然如果本轮的状态为normal，则</span></span><br><span class="line"><span class="comment">其得分马上可以得到，前两轮的得分也可以确定。</span></span><br><span class="line"><span class="comment">对第10 轮，因为可以滚3 次球，因此其得分为如果第一次得10 分，或前两次共得10</span></span><br><span class="line"><span class="comment">分，则最后得分为三次得分之和，否则最后得分为两次得分之和。*/</span></span><br><span class="line"><span class="comment">//参考程序：</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> normal = <span class="number">1</span>;<span class="comment">//定义三种状态</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> spare = <span class="number">2</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> strike = <span class="number">3</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> game[<span class="number">10</span>] = &#123; <span class="number">0</span> &#125;;<span class="comment">//数组存储各轮得分</span></span><br><span class="line"><span class="type">int</span> state1 = <span class="number">0</span>, state2 = <span class="number">0</span>;<span class="comment">//上两轮的状态</span></span><br><span class="line"><span class="type">int</span> i, score, state;<span class="comment">//i 为循环变量，score 存储当前得分，state 为本轮状态</span></span><br><span class="line"><span class="type">int</span> totalscore = <span class="number">0</span>;<span class="comment">//总得分</span></span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)<span class="comment">//计算每轮得分</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;score);<span class="comment">//第一次击球分数</span></span><br><span class="line"><span class="keyword">if</span> (score &lt; <span class="number">0</span> &amp;&amp; score&gt;<span class="number">10</span>)<span class="comment">//保证输入的正确性</span></span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">game[i] = score;</span><br><span class="line"><span class="keyword">if</span> (state2 == strike &amp;&amp; state1 == strike)</span><br><span class="line">game[i - <span class="number">2</span>] = game[i - <span class="number">2</span>] + score; <span class="comment">//求上两轮的得分</span></span><br><span class="line"><span class="keyword">if</span> (state1 &gt;= spare)<span class="comment">//根据上一轮的状态累加得到上一轮的得分</span></span><br><span class="line">game[i - <span class="number">1</span>] = game[i - <span class="number">1</span>] + score;</span><br><span class="line"><span class="keyword">if</span> (score == <span class="number">10</span>)<span class="comment">//如果第一轮全中，则无第二次</span></span><br><span class="line">state = strike;<span class="comment">//保持本轮状态</span></span><br><span class="line"><span class="keyword">else</span><span class="comment">//第二次击球</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;score);</span><br><span class="line"><span class="keyword">if</span> (score &lt; <span class="number">0</span> &amp;&amp; score&gt;<span class="number">10</span>)</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">game[i] = game[i] + score;<span class="comment">//累加得到本轮暂时得分</span></span><br><span class="line"><span class="keyword">if</span> (game[i] &gt; <span class="number">10</span>)</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line"><span class="keyword">if</span> (game[i] == <span class="number">10</span>)</span><br><span class="line">state = spare;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">state = normal;</span><br><span class="line"><span class="keyword">if</span> (state1 == strike)<span class="comment">//根据上一轮的状态累加得到上一轮的得分</span></span><br><span class="line">game[i - <span class="number">1</span>] = game[i - <span class="number">1</span>] + score;</span><br><span class="line">&#125;</span><br><span class="line">state2 = state1;</span><br><span class="line">state1 = state;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (state1 == spare)<span class="comment">//根据第10 轮的当前状态求得到最后两轮的得分</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;score);</span><br><span class="line"><span class="keyword">if</span> (score &lt; <span class="number">0</span> &amp;&amp; score&gt;<span class="number">10</span>)</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">game[<span class="number">9</span>] = game[<span class="number">9</span>] + score;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (state1 == strike)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;score);</span><br><span class="line"><span class="keyword">if</span> (score &lt; <span class="number">0</span> &amp;&amp; score&gt;<span class="number">10</span>)</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">game[<span class="number">9</span>] = game[<span class="number">9</span>] + score;</span><br><span class="line"><span class="keyword">if</span> (state2 == strike)</span><br><span class="line">game[<span class="number">8</span>] = game[<span class="number">8</span>] + score;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;score);</span><br><span class="line"><span class="keyword">if</span> (score &lt; <span class="number">0</span> &amp;&amp; score&gt;<span class="number">10</span>)</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">game[<span class="number">9</span>] = game[<span class="number">9</span>] + score;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)<span class="comment">//求总得分</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\t&quot;</span>, game[i]);</span><br><span class="line">totalscore += game[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, totalscore);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="10" type="1"><li></li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/***写一个函数，使其能处理字符串中除字母（大小写）、数字外的其他ASCII 字符，</span></span><br><span class="line"><span class="comment">对多于一个连在一起的相同字符，将其缩减至仅保留一个。（参考函数原型：void del(char*str)）***/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*算法分析：本题判断方法和习题6.2 类似。难点在于处理连在一起的相同字符。首先定</span></span><br><span class="line"><span class="comment">义一个字符数组str2[ ]，用于存储判断处理后的字符串。字符串str 开始循环后，如果是字</span></span><br><span class="line"><span class="comment">母或者数字，就赋给str2；如果是其他字符，先判断是否为连续，再进行赋值。连续的情况</span></span><br><span class="line"><span class="comment">需要特殊处理，循环直到是其他字符后再赋值。*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//参考程序：</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">char</span> str2[<span class="number">80</span>];<span class="comment">//定义一个数组存储字符串</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">del</span><span class="params">(<span class="type">char</span>* str)</span><span class="comment">//定义函数</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> ((*str) != <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> ((<span class="string">&#x27;a&#x27;</span> &lt;= *str &amp;&amp; &lt;= <span class="string">&#x27;z&#x27;</span>) || (<span class="string">&#x27;A&#x27;</span> &lt;= *str &amp;&amp; &lt;= <span class="string">&#x27;Z&#x27;</span>) || (<span class="string">&#x27;0&#x27;</span> &lt;= *str &amp;&amp; &lt;= <span class="string">&#x27;9&#x27;</span>))<span class="comment">//判断ASCII 码</span></span><br><span class="line">&#123;</span><br><span class="line">str2[i] = *str;</span><br><span class="line">str++;</span><br><span class="line">i++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span><span class="comment">//处理连在一起的相同字符</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">while</span> (*str == *(str + <span class="number">1</span>))</span><br><span class="line">str++;</span><br><span class="line">str2[i] = *str;</span><br><span class="line">str++;</span><br><span class="line">i++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">char</span> str[<span class="number">80</span>];</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请输入字符串:&quot;</span>);</span><br><span class="line">gets(str);</span><br><span class="line">del(str);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n 新字符串：%s\n&quot;</span>, str2);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="11" type="1"><li></li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*如果一个数正好是它的所有约数（除了它本身以外）的和，此数称完备数，如：6，</span></span><br><span class="line"><span class="comment">它的约数有1、2、3，并且1+2+3=6。求出30 000 以内所有的完备数，并显示输出（求完</span></span><br><span class="line"><span class="comment">备数用函数实现）（参考函数原型：void find(int j)，直接在子函数中输出完备数及其所有约数）。*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*算法分析：对于整数j，要求出所有的约数，需要对小于j 的所有数进行循环。在每求</span></span><br><span class="line"><span class="comment">出一个约数的同时，j 减去这个约数，再将结果赋给j，如果是完备数，最后的结果将是0。</span></span><br><span class="line"><span class="comment">需要注意是的，j 的值在不断变化，为了保证j 一直用初值进行求约数操作，所以首先将j</span></span><br><span class="line"><span class="comment">的值赋给一个中间变量s，利用s 来进行减操作，让两步操作不相互影响。*/</span></span><br><span class="line"><span class="comment">//参考程序：</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> k[<span class="number">20</span>];</span><br><span class="line"><span class="type">void</span> <span class="title function_">find</span><span class="params">(<span class="type">int</span> j)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> i, n, s;<span class="comment">//i 为因子</span></span><br><span class="line">n = <span class="number">-1</span>;</span><br><span class="line">s = j;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">1</span>; i &lt; j; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> ((j % i) == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">n++;</span><br><span class="line">s = s-i;<span class="comment">//判断约数的和</span></span><br><span class="line">k[n] = i;<span class="comment">//将每个因子赋给数组k</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (s == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d 是一个完备数，它的因子是：&quot;</span>, j);</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%6d&quot;</span>, k[i]);<span class="comment">//输出</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%6d\n&quot;</span>, k[n]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">main()</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;符合条件的数有：&quot;</span>);</span><br><span class="line"><span class="keyword">for</span> (n = <span class="number">1</span>; n &lt; <span class="number">30000</span>; n++)</span><br><span class="line">find(n);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//类似的</span></span><br><span class="line"><span class="comment">/*如果有两个数，每一个数它的所有约数（除了它本身以外）的和正好等于对方，</span></span><br><span class="line"><span class="comment">则称这两个数为互满数，求出30 000 以内所有的互满数，并显示输出。求一个数它的所有</span></span><br><span class="line"><span class="comment">约数（除了它本身以外）的和用函数实现（参考函数原型：int factor(int j)）。*/</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stdafx.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> k[<span class="number">40</span>];</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 30000</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">factor</span><span class="params">(<span class="type">int</span> j)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> i, n, s;</span><br><span class="line">n = <span class="number">-1</span>;</span><br><span class="line">s = j;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">1</span>; i &lt; j; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> ((j % i) == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">n++;</span><br><span class="line">s = s-i;</span><br><span class="line">k[n] = i; <span class="comment">// 将每个因子赋给数组K</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">s = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= n; i++)s += k[i]; <span class="comment">// 将每个因子累加</span></span><br><span class="line"><span class="keyword">return</span> s;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> s1, s2;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> m = <span class="number">2</span>; m &lt; N; m++)</span><br><span class="line">&#123;</span><br><span class="line">s1 = factor(m);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> n = m + <span class="number">1</span>; n &lt; N; n++)</span><br><span class="line">&#123;</span><br><span class="line">s2 = factor(n);</span><br><span class="line"><span class="keyword">if</span> (s1 == s2)<span class="built_in">printf</span>(<span class="string">&quot;%d和%d是互满数\n&quot;</span>, m, n);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="12" type="1"><li></li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//完成正文中基于结构的学生成绩处理程序，提供按照成绩排序输出的功能。其中结构定义如下：</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">stu</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="type">int</span> num;</span><br><span class="line"><span class="type">char</span> name[<span class="number">100</span>];</span><br><span class="line"><span class="type">char</span> sex;</span><br><span class="line"><span class="type">float</span> score;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">boy[<span class="number">5</span>] = &#123; &#123;<span class="number">101</span>,<span class="string">&quot;Li ming&quot;</span>,<span class="string">&#x27;M&#x27;</span>,<span class="number">45</span>&#125;,&#123;<span class="number">102</span>,<span class="string">&quot;Zhang ping&quot;</span>,<span class="string">&#x27;M&#x27;</span>,<span class="number">62.5</span>&#125;,&#123;<span class="number">103</span>,<span class="string">&quot;He fang&quot;</span>,<span class="string">&#x27;F&#x27;</span>,<span class="number">92.5</span>&#125;,&#123;<span class="number">104</span>,<span class="string">&quot;Cheng ling&quot;</span>,<span class="string">&#x27;F&#x27;</span>,<span class="number">87</span>&#125;,&#123;<span class="number">105</span>,<span class="string">&quot;Wang ming&quot;</span>,<span class="string">&#x27;M&#x27;</span>,<span class="number">58</span>&#125; &#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">sort</span><span class="params">(<span class="keyword">struct</span> stu* ps)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> i, j, tempnum;</span><br><span class="line"><span class="type">float</span> maxscore, minscore, tempscore;</span><br><span class="line"><span class="type">char</span> tempsex;</span><br><span class="line"><span class="type">char</span>* tempname;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">maxscore = (ps + i) -&gt; score;</span><br><span class="line"><span class="keyword">for</span> (j = i + <span class="number">1</span>; j &lt; <span class="number">5</span>; j++)</span><br><span class="line">&#123;</span><br><span class="line">minscore = (ps + j) -&gt; score;</span><br><span class="line"><span class="keyword">if</span> (maxscore &gt; minscore)</span><br><span class="line">&#123;</span><br><span class="line">tempnum = (ps + j) -&gt; num; (ps + j) -&gt; num = (ps + i) -&gt; num; (ps + i) -&gt; num = tempnum;</span><br><span class="line">tempname = (ps + j) -&gt; name; (ps + j) -&gt; name = (ps + i) -&gt; name; (ps + i) -&gt; name = tempname;</span><br><span class="line">tempsex = (ps + j) -&gt; sex; (ps + j) -&gt; sex = (ps + i) -&gt; sex; (ps + i) -&gt; sex = tempsex;</span><br><span class="line">tempscore = (ps + j) -&gt; score; (ps + j) -&gt; score = (ps + i) -&gt; score; (ps + i) -&gt; score = tempscore;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">main()</span><br><span class="line">&#123;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">stu</span>* <span class="title">ps</span>;</span></span><br><span class="line"><span class="type">int</span> i;</span><br><span class="line">ps = boy;</span><br><span class="line">sort(ps);</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;学号: %d, 姓名: %s, 性别: %c, 成绩: %5.2f\n&quot;</span>, ps-&gt; num, ps-&gt; name, ps-&gt; sex,</span><br><span class="line">ps-&gt; score);</span><br><span class="line">ps++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="13" type="1"><li></li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//编写一个程序，把从键盘输入的信息存入指定的文件中去，要求文件名用命令行参数指定。</span></span><br><span class="line"><span class="comment">//参考程序：</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line">main(<span class="type">int</span> argc, <span class="type">char</span>* argv[])</span><br><span class="line">&#123;</span><br><span class="line">FILE* fp;</span><br><span class="line"><span class="type">char</span> ch;</span><br><span class="line"><span class="keyword">if</span> (argc == <span class="number">1</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;usage:no linenum filename\n&quot;</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (argc &gt; <span class="number">2</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Too many arguments to linenum\n&quot;</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> ((fp = fopen(argv[<span class="number">1</span>], <span class="string">&quot;w&quot;</span>)) == <span class="literal">NULL</span>)<span class="comment">//打开文件，请注意打开的方式</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;can&#x27;t open %s\n&quot;</span>, argv[<span class="number">1</span>]);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Input information through keyboard.\n&quot;</span>);</span><br><span class="line"><span class="keyword">while</span> (ch != <span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line">ch = getchar();<span class="comment">//从键盘得到信息</span></span><br><span class="line"><span class="built_in">fputs</span>((<span class="type">char</span>*)ch, fp);<span class="comment">//存入指定的文件中</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">fclose(fp);<span class="comment">//关闭文件</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 编程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>latex常用数学公式</title>
      <link href="/2023/07/03/latex%E5%B8%B8%E7%94%A8%E6%95%B0%E5%AD%A6%E5%85%AC%E5%BC%8F/"/>
      <url>/2023/07/03/latex%E5%B8%B8%E7%94%A8%E6%95%B0%E5%AD%A6%E5%85%AC%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<h2 id="一、常用写法"><a href="#一、常用写法" class="headerlink" title="一、常用写法"></a>一、常用写法</h2><ol><li>上标和下标：<br> 上标：使用 ^ 符号，例如：x^2 表示 x 的平方。<br> 下标：使用 _ 符号，例如：y_i 表示 y 的第 i 个分量。</li><li>分数：<br> 使用 \frac{a}{b} 表示 a 除以 b，例如：\frac{1}{2} 表示 1&#x2F;2。</li><li>根号：<br> 使用 \sqrt{a} 表示 a 的平方根，例如：\sqrt{2} 表示 √2。</li><li>求和与积分：<br> 使用 \sum 表示求和符号，例如：\sum_{i&#x3D;1}^{n} i 表示从 1 到 n 求和 i。<br> 使用 \int 表示积分符号，例如：\int_{a}^{b} f(x) dx 表示从 a 到 b 的函数 f(x) 的积分。</li><li>矩阵：<br> 使用 matrix 或者 bmatrix 等环境表示矩阵，例如：<figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">\begin</span>&#123;bmatrix&#125;</span><br><span class="line">    1 <span class="built_in">&amp;</span> 2 <span class="keyword">\\</span></span><br><span class="line">    3 <span class="built_in">&amp;</span> 4</span><br><span class="line">  <span class="keyword">\end</span>&#123;bmatrix&#125;</span><br></pre></td></tr></table></figure></li><li>分段函数：<br> 使用 \begin{cases} 和 \end{cases} 来表示分段函数，例如：<figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">f(x) =</span><br><span class="line"><span class="keyword">\begin</span>&#123;cases&#125;</span><br><span class="line">  x, <span class="built_in">&amp;</span> x <span class="keyword">\geq</span> 0 <span class="keyword">\\</span></span><br><span class="line">  -x, <span class="built_in">&amp;</span> x &lt; 0</span><br><span class="line"><span class="keyword">\end</span>&#123;cases&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><h2 id="二、常用函数"><a href="#二、常用函数" class="headerlink" title="二、常用函数"></a>二、常用函数</h2><ol><li>幂函数：<br> 使用 x^y 表示 x 的 y 次方，例如：2^3 表示 2 的 3 次方。</li><li>开方函数：<br> 使用 \sqrt{x} 表示 x 的平方根，例如：\sqrt{2} 表示 √2。</li><li>指数函数和对数函数：<br> 使用 e^x 表示 e 的 x 次方，例如：e^2 表示 e 的平方。<br> 使用 \log{x} 表示以 10 为底的对数函数，例如：\log{100} 表示 log₍₁₀₎100。</li><li>三角函数：<br> 使用 \sin{x} 表示正弦函数，例如：\sin{\theta} 表示 sinθ。<br> 使用 \cos{x} 表示余弦函数，例如：\cos{\theta} 表示 cosθ。<br> 使用 \tan{x} 表示正切函数，例如：\tan{\theta} 表示 tanθ。</li><li>反三角函数：<br> 使用 \arcsin{x} 表示反正弦函数，例如：\arcsin{0.5} 表示 arcsin(0.5)。<br> 使用 \arccos{x} 表示反余弦函数，例如：\arccos{0.5} 表示 arccos(0.5)。<br> 使用 \arctan{x} 表示反正切函数，例如：\arctan{1} 表示 arctan(1)。</li><li>指数和对数函数：<br> 使用 a^x 表示以 a 为底的指数函数，例如：2^x 表示 2 的 x 次方。<br> 使用 \ln{x} 表示以 e 为底的对数函数，例如：\ln{e} 表示 ln(e)。</li></ol><hr><h2 id="三、常用不等号"><a href="#三、常用不等号" class="headerlink" title="三、常用不等号"></a>三、常用不等号</h2><ol><li>大于等于：使用 \geq 表示大于等于关系，例如：a \geq b 表示 a 大于等于 b。</li><li>小于等于：使用 \leq 表示小于等于关系，例如：a \leq b 表示 a 小于等于 b。</li><li>大于：使用 \gt 或者 &gt; 表示大于关系，例如：a &gt; b 表示 a 大于 b。</li><li>小于：使用 \lt 或者 &lt; 表示小于关系，例如：a &lt; b 表示 a 小于 b。</li><li>不等于：使用 \neq 或者 !&#x3D; 表示不等于关系，例如：a \neq b 表示 a 不等于 b。</li><li>约等于：使用 \approx 表示约等于关系，例如：a \approx b 表示 a 约等于 b。</li><li>相似于：使用 \sim 表示相似于关系，例如：a \sim b 表示 a 相似于 b。</li><li>正比于：使用 \propto 表示正比于关系，例如：a \propto b 表示 a 正比于 b。</li></ol><hr><h2 id="四、常用空格"><a href="#四、常用空格" class="headerlink" title="四、常用空格"></a>四、常用空格</h2><ol><li>普通空格：在LaTeX中，用 （空格）表示普通的空格。例如：a b 表示在a和b之间有一个空格。</li><li>紧凑空格：在LaTeX中，用 <del>（波浪线）表示紧凑空格，也称为不断行空格。例如：a</del>b 表示在a和b之间有一个紧凑空格，通常用于防止在该位置发生换行。</li><li>大空格：在LaTeX中，用 \quad 表示一个较大的空格。例如：a \quad b 表示在a和b之间有一个较大的空格。</li><li>较大空格：在LaTeX中，用 \qquad 表示一个更大的空格。例如：a \qquad b 表示在a和b之间有一个更大的空格。</li><li>自定义空格：在LaTeX中，你还可以使用 \hspace{} 命令来定义自定义的水平空格。例如：a\hspace{2em}b 表示在a和b之间有一个自定义宽度为2em的空格。</li></ol>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
