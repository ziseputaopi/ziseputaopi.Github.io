<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>latex常用数学公式</title>
      <link href="/2023/07/03/latex%E5%B8%B8%E7%94%A8%E6%95%B0%E5%AD%A6%E5%85%AC%E5%BC%8F/"/>
      <url>/2023/07/03/latex%E5%B8%B8%E7%94%A8%E6%95%B0%E5%AD%A6%E5%85%AC%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<h2 id="一、常用写法"><a href="#一、常用写法" class="headerlink" title="一、常用写法"></a>一、常用写法</h2><ol><li>上标和下标：<br> 上标：使用 ^ 符号，例如：x^2 表示 x 的平方。<br> 下标：使用 _ 符号，例如：y_i 表示 y 的第 i 个分量。</li><li>分数：<br> 使用 \frac{a}{b} 表示 a 除以 b，例如：\frac{1}{2} 表示 1&#x2F;2。</li><li>根号：<br> 使用 \sqrt{a} 表示 a 的平方根，例如：\sqrt{2} 表示 √2。</li><li>求和与积分：<br> 使用 \sum 表示求和符号，例如：\sum_{i&#x3D;1}^{n} i 表示从 1 到 n 求和 i。<br> 使用 \int 表示积分符号，例如：\int_{a}^{b} f(x) dx 表示从 a 到 b 的函数 f(x) 的积分。</li><li>矩阵：<br> 使用 matrix 或者 bmatrix 等环境表示矩阵，例如：<figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">\begin</span>&#123;bmatrix&#125;</span><br><span class="line">    1 <span class="built_in">&amp;</span> 2 <span class="keyword">\\</span></span><br><span class="line">    3 <span class="built_in">&amp;</span> 4</span><br><span class="line">  <span class="keyword">\end</span>&#123;bmatrix&#125;</span><br></pre></td></tr></table></figure></li><li>分段函数：<br> 使用 \begin{cases} 和 \end{cases} 来表示分段函数，例如：<figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">f(x) =</span><br><span class="line"><span class="keyword">\begin</span>&#123;cases&#125;</span><br><span class="line">  x, <span class="built_in">&amp;</span> x <span class="keyword">\geq</span> 0 <span class="keyword">\\</span></span><br><span class="line">  -x, <span class="built_in">&amp;</span> x &lt; 0</span><br><span class="line"><span class="keyword">\end</span>&#123;cases&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><h2 id="二、常用函数"><a href="#二、常用函数" class="headerlink" title="二、常用函数"></a>二、常用函数</h2><ol><li>幂函数：<br> 使用 x^y 表示 x 的 y 次方，例如：2^3 表示 2 的 3 次方。</li><li>开方函数：<br> 使用 \sqrt{x} 表示 x 的平方根，例如：\sqrt{2} 表示 √2。</li><li>指数函数和对数函数：<br> 使用 e^x 表示 e 的 x 次方，例如：e^2 表示 e 的平方。<br> 使用 \log{x} 表示以 10 为底的对数函数，例如：\log{100} 表示 log₍₁₀₎100。</li><li>三角函数：<br> 使用 \sin{x} 表示正弦函数，例如：\sin{\theta} 表示 sinθ。<br> 使用 \cos{x} 表示余弦函数，例如：\cos{\theta} 表示 cosθ。<br> 使用 \tan{x} 表示正切函数，例如：\tan{\theta} 表示 tanθ。</li><li>反三角函数：<br> 使用 \arcsin{x} 表示反正弦函数，例如：\arcsin{0.5} 表示 arcsin(0.5)。<br> 使用 \arccos{x} 表示反余弦函数，例如：\arccos{0.5} 表示 arccos(0.5)。<br> 使用 \arctan{x} 表示反正切函数，例如：\arctan{1} 表示 arctan(1)。</li><li>指数和对数函数：<br> 使用 a^x 表示以 a 为底的指数函数，例如：2^x 表示 2 的 x 次方。<br> 使用 \ln{x} 表示以 e 为底的对数函数，例如：\ln{e} 表示 ln(e)。</li></ol><hr><h2 id="三、常用不等号"><a href="#三、常用不等号" class="headerlink" title="三、常用不等号"></a>三、常用不等号</h2><ol><li>大于等于：使用 \geq 表示大于等于关系，例如：a \geq b 表示 a 大于等于 b。</li><li>小于等于：使用 \leq 表示小于等于关系，例如：a \leq b 表示 a 小于等于 b。</li><li>大于：使用 \gt 或者 &gt; 表示大于关系，例如：a &gt; b 表示 a 大于 b。</li><li>小于：使用 \lt 或者 &lt; 表示小于关系，例如：a &lt; b 表示 a 小于 b。</li><li>不等于：使用 \neq 或者 !&#x3D; 表示不等于关系，例如：a \neq b 表示 a 不等于 b。</li><li>约等于：使用 \approx 表示约等于关系，例如：a \approx b 表示 a 约等于 b。</li><li>相似于：使用 \sim 表示相似于关系，例如：a \sim b 表示 a 相似于 b。</li><li>正比于：使用 \propto 表示正比于关系，例如：a \propto b 表示 a 正比于 b。</li></ol><hr><h2 id="四、常用空格"><a href="#四、常用空格" class="headerlink" title="四、常用空格"></a>四、常用空格</h2><ol><li>普通空格：在LaTeX中，用 （空格）表示普通的空格。例如：a b 表示在a和b之间有一个空格。</li><li>紧凑空格：在LaTeX中，用 <del>（波浪线）表示紧凑空格，也称为不断行空格。例如：a</del>b 表示在a和b之间有一个紧凑空格，通常用于防止在该位置发生换行。</li><li>大空格：在LaTeX中，用 \quad 表示一个较大的空格。例如：a \quad b 表示在a和b之间有一个较大的空格。</li><li>较大空格：在LaTeX中，用 \qquad 表示一个更大的空格。例如：a \qquad b 表示在a和b之间有一个更大的空格。</li><li>自定义空格：在LaTeX中，你还可以使用 \hspace{} 命令来定义自定义的水平空格。例如：a\hspace{2em}b 表示在a和b之间有一个自定义宽度为2em的空格。</li></ol>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数学习题收集</title>
      <link href="/2023/07/03/%E6%95%B0%E5%AD%A6%E4%B9%A0%E9%A2%98%E6%94%B6%E9%9B%86/"/>
      <url>/2023/07/03/%E6%95%B0%E5%AD%A6%E4%B9%A0%E9%A2%98%E6%94%B6%E9%9B%86/</url>
      
        <content type="html"><![CDATA[<h2 id="一数学基础过关660题">一、数学基础过关660题</h2><ol start="28" type="1"><li><span class="math display">\[设f(x) =\begin{cases}  x^2, &amp; x \geq 0 \\  x^a\sin{\frac{1}{x}}, &amp; x &lt; 0\end{cases}，若f(x)可导，则a满足应\underline{\hspace{2.5em}}；若f&#39;(x)连续，则a满足应\underline{\hspace{2.5em}}。\]</span> <span class="math display">\[答案:a\gt1;a\gt2;\]</span></li></ol><hr><ol start="68" type="1"><li><span class="math display">\[\mathrm{I}=\int_{1}^{+\infty} [\frac{2x^2+bx+a}{x(2x+a)}-1] dx=1，则a=\underline{\hspace{2.5em}}，b= \underline{\hspace{2.5em}}。\]</span> <span class="math display">\[答案:a=2e-2;b=2e-2;\]</span></li></ol>]]></content>
      
      
      <categories>
          
          <category> 考研 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>操作系统背诵知识点汇总</title>
      <link href="/2023/06/24/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E8%83%8C%E8%AF%B5%E7%9F%A5%E8%AF%86%E7%82%B9%E6%B1%87%E6%80%BB/"/>
      <url>/2023/06/24/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E8%83%8C%E8%AF%B5%E7%9F%A5%E8%AF%86%E7%82%B9%E6%B1%87%E6%80%BB/</url>
      
        <content type="html"><![CDATA[<h2 id="一、操作系统基础概念"><a href="#一、操作系统基础概念" class="headerlink" title="一、操作系统基础概念"></a>一、操作系统基础概念</h2><ol><li><p><strong>何谓批处理系统，以及优点。</strong><br> 定义：用户准备好要执行的程序，数据和控制作业执行的说明书，由操作员输入到计算机系统中等待处理，操作系统选择作业并按照作业执行说明书要求自动控制作业执行。<br> 优点：<br> （1）多道程序并行工作，减少CPU的开销时间。<br> （2）作业调度可以合理选择转入主存储器的作业，充分利用计算机系统资源。<br> （3） 作业执行过程中不再访问低速设备，而直接访问高速的磁盘设备，缩短执行时间。<br> （4）作业成批输入，减少I&#x2F;O次数。</p></li><li><p><strong>何谓多道程序设计</strong><br> 允许多个程序同时进入一个计算机系统的主存储器并启动进行运行计算的方法，也就是说，计算机内存可以同时存取多道独立程序。他们都处于开始和结束之间，从宏观上看是并行的，多道程序都处于运行中，并没有结束；从微观上看是串行的，各道程序轮流使用CPU，交替执行，引入多道程序设计技术的根本目的是提高CPU的利用率，充分发挥计算机系统部分的并行性。</p></li><li><p><strong>分时技术</strong><br> 把批处理的运行时间分为很短的时间片，按时间片轮流的把CPU分配给各个联机作业使用，如果某个作业分配给他的时间片用完之前未完成，该作业就会中断，调入就绪队列，等待下一轮继续执行，此时，CPU分配给下一个进程</p></li><li><p><strong>系统调用和库函数的区别</strong><br>  库函数是应用程序的一部分，可以运行在用户空间中，而系统调用是操作系统的一部分，是内核提供给用户的程序接口，由应用程序调用，通过软中断进入内核态，运行在内核空间中，许多库函数都会使用系统调用来实现功能，没有使用系统调用的库函数，执行效率比使用系统调用的高，因为系统调用时，需要内核态与用户态的转换。</p></li></ol><hr><h2 id="二、进程管理"><a href="#二、进程管理" class="headerlink" title="二、进程管理"></a>二、进程管理</h2><ol><li><p><strong>进程和程序的区别</strong><br> （1）进程是动态的，程序是静态的。<br> （2）进程是短暂的，程序是永久的。<br> （3）进程的组成包括程序段、数据段、进程控制块（PCB）。<br> （4）一个程序可以产生多个不同的进程，一个进程也可以实现多个程序。<br> （5）进程具有并发性，程序没有。</p></li><li><p><strong>进程的定义和引入原因</strong><br> 定义：具有独立功能的程序在有关数据集的一个动态的执行过程，是资源分配的基本单位。<br> 原因：为了更好地控制和描述程序的并发执行，实现操作系统的并发性与共享性，提高系统的资源利用率和系统吞吐量。</p></li><li><p><strong>引入PCB原因，PCB成分，为什么说PCB是进程存在的唯一标识，PCB的作用。</strong><br> 原因：为了控制和管理进程的并发执行，协助进程完成状态的转换。<br> 成分：<br> （1）进程描述信息：进程标识符，用户标识符。<br> （2）进程管理和控制信息：进程当前状态、进程优先级、进入内存时间、处理机占用时间。<br> （3）资源分配清单：程序段指针、数据段指针、堆栈段指针。<br> （4）处理机相关信息：通用寄存器、程序状态值。<br> 为什么说PCB是进程存在的唯一标识：在进程的创建、运行、撤销的各个阶段中，系统总是通过PCB对进程进行控制，即系统是根据PCB感知进程存在。<br> 作用：在多道程序环境下：支持多进程并发执行，保存进程的若干信息。</p></li><li><p><strong>引入线程原因</strong><br> 为了减少程序并发执行时所付出的时空开销，使操作系统具有更好的并发性。</p></li><li><p><strong>创建进程的原因和过程</strong><br> 原因：用户登录系统、作业调度、系统提供服务、用户程序的应用请求。<br> 过程：<br> （1）为新进程分配一个唯一的进程标识符，并申请一个空白的PCB。<br> （2）为进程分配资源，为新进程的程序、数据以及用户栈分配必要的内存空间，若失败，则阻塞。<br> （3）初始化PCB，主要包括初始化标准信息，初始化处理机状态信息，初始化处理机控制信息以及设置进程优先级等。<br> （4）如果进程的就绪队列能够接纳新的进程，将新进程插入就绪队列等待调度执行。</p></li><li><p><strong>进程切换的过程</strong><br> （1）保存处理机上下文，包括程序计数器和其他寄存器。<br> （2）更新PCB信息，将上述信息保存在PCB中。<br> （3）把进程PCB移入相应的队列，如就绪队列或某事件的阻塞队列。<br> （4）选择另外一个进程执行，并更新PCB。<br> （5）更新内存管理的数据结构。<br> （6）恢复处理机上下文。</p></li><li><p><strong>进程阻塞的原因和过程</strong><br> 原因：请求系统资源失败，等待某种操作的完成，新数据未到达，无新工作可做系统自动执行阻塞原语。<br> 过程：<br> （1）首先停止当前进程。<br> （2）保存进程的CPU现场，保存断点，以便之后重新调用该进程，从断点开始执行。<br> （3）停止运行该进程，将进程状态由执行状态改为阻塞状态，然后将该进程插入到相应的等待队列中。<br> （4）转到进程调用程序，从就绪队列中选择一个进程投入运行</p></li><li><p><strong>进程唤醒的原因和过程</strong><br> 原因：进程所期待的事务出现，I&#x2F;O完成、数据已到达、提供数据的进程调用唤醒原语<br> 过程：<br> （1）在该事件的等待队列中找到相应进程的PCB。<br> （2）被唤醒进程从相应队列中移除，并置其状态为就绪态。<br> （3）若就绪队列能容纳新进程，将该进程插入就绪队列，等待调度。</p></li><li><p><strong>进程撤销的原因和进程</strong>、<br> 原因：正常运行结束，异常结束，操作系统，父进程请求终止。<br> 过程：<br> （1）从PCB集中找到被撤销的进程PCB。<br> （2）若撤销进程正在执行，则应立即终止进程的执行，设置重新调度标志，以便进程撤销后将CPU分配给其他进程。<br> （3）若被撤销进程有子孙进程，撤销子进程，如果不撤销子进程，子进程变成孤儿进程或者由其他进程接管。<br> （4）回收撤销后进程所占用的资源，或者归还给父进程，或者归还给系统，最后回收PCB</p></li><li><p>** 模式切换与进程切换**<br>（1）模式切换是处理机在内核态与用户态之间切换，可以在同一个进程中切换也可以在不同进程中切换。<br>（2）进程切换是指CPU在不同进程之间切换。<br>（3）进程切换必然导致模式切换，反之不一定。</p></li><li><p><strong>父进程和子进程之间的关系</strong><br>（1）子进程继承了父进程大部分属性，如文件描述符。<br>（2）父进程创建的一个或者多个子进程。<br>（3）一个进程可能有多个子进程，但是最多只能有一个父进程。<br>（4）父进程与子进程并发执行，父进程终止，则子进程可以不终止，一个进程可以没有父进程，也可以没有子进程。</p></li><li><p><strong>进程通信定义、低级通信、高级通信</strong><br>定义：在进程区传输数据（交换信息）。<br>低级：PV操作。<br>高级：共享存储区系统、消息传输系统、管道通信系统。</p></li><li><p><strong>线程与进程比较</strong><br>（1）进程是拥有系统资源的基本单位，而线程不拥有系统资源（除了一点必不可少的程序计数器、寄存器、栈、线程控制块），但是线程可以访问其隶属进程的系统资源。<br>（2）传统操作系统中，拥有资源和独立调度的基本单位均为进程，而引入线程的操作系统中，线程是独立调度和分派的基本单位，进程是拥有资源的基本单位，同一个进程的线程切换不会引起进程的切换，不同进程中的线程切换会引起进程的切换。<br>（3）同一个进程内多个进程之间也可以并发，提高系统并发性。<br>（4）线程切换只需要保存和设置少量寄存器内容，开销小，进程切换远大于线程切换的开销，同样创建、撤销、通信开销均减少。<br>（5）通信方面、进程需要相应的通信机制，线程（同一个进程内的）可直接访问进程的地址空间。</p></li><li><p><strong>引起调度原因</strong><br>（1）当进程运行结束，调用一个新的进程。<br>（2）当前进程因某种原因从运行状态进入阻塞状态。<br>（3）采用抢占式调度方式中，更高优先级的进程抢占处理机。<br>（4）分时系统中，进程分配的时间片用完。</p></li><li><p><strong>作业调度的时机和任务是什么？</strong><br>时间：内存中的进程数小于多道度。<br>任务：从后备队列中选取多少个作业调入内存，取决于多道度，而接纳哪些作业取决于调度算法。</p></li><li><p><strong>进程调度有哪两种调度方式？各自的调度时机是什么？</strong><br>非抢占式：正在运行的进程运行正常&#x2F;异常结束，或进程发生阻塞。<br>抢占式：有优先级更高的进程到达，有更短的进程到达，时间片用完了。</p></li><li><p><strong>哪种调度方式既考虑等待时间又兼顾服务时间？</strong><br>高响应比优先调度算法。</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 考研 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 操作系统 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>操作系统（汤小丹）课后习题推荐</title>
      <link href="/2023/06/23/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%EF%BC%88%E6%B1%A4%E5%B0%8F%E4%B8%B9%EF%BC%89%E8%AF%BE%E5%90%8E%E4%B9%A0%E9%A2%98%E6%8E%A8%E8%8D%90/"/>
      <url>/2023/06/23/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%EF%BC%88%E6%B1%A4%E5%B0%8F%E4%B8%B9%EF%BC%89%E8%AF%BE%E5%90%8E%E4%B9%A0%E9%A2%98%E6%8E%A8%E8%8D%90/</url>
      
        <content type="html"><![CDATA[<h2 id="答案链接"><a href="#答案链接" class="headerlink" title="答案链接"></a>答案链接</h2><p>  <a href="https://blog.csdn.net/MyAmber/article/details/129249645">https://blog.csdn.net/MyAmber/article/details/129249645</a></p><h2 id="第一章"><a href="#第一章" class="headerlink" title="第一章"></a>第一章</h2><p>1 4 5 6 8 9 11 13 14 15 16 17 18</p><h2 id="第二章"><a href="#第二章" class="headerlink" title="第二章"></a>第二章</h2><p>2 3 4 5 6 7 8 10 11 12 13 20 21 22 23 24 25 26</p><h2 id="第三章"><a href="#第三章" class="headerlink" title="第三章"></a>第三章</h2><p>1 5 8 9 13 21 22 24 25 26 28 31 </p><h2 id="第四章"><a href="#第四章" class="headerlink" title="第四章"></a>第四章</h2><p>2 3 4 5 7 9 10 11 13 14 16 20 21 25 26 27</p><h2 id="第五章"><a href="#第五章" class="headerlink" title="第五章"></a>第五章</h2><p>1 2 3 4 5 7 9 10 14 15 16 17 18 19 20 21 22 25 26</p><h2 id="第六章"><a href="#第六章" class="headerlink" title="第六章"></a>第六章</h2><p>1 2 4 5 7 8 10 14 15 16 17 18 21 24 29</p><h2 id="第七章"><a href="#第七章" class="headerlink" title="第七章"></a>第七章</h2><p>5 6 7 8 9 10 11 12 14 15 17 21 23</p><h2 id="第八章"><a href="#第八章" class="headerlink" title="第八章"></a>第八章</h2><p>2 3 4 10 11 12 14 15 16 17 18 20</p>]]></content>
      
      
      <categories>
          
          <category> 考研 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 操作系统 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
