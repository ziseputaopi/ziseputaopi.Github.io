<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>C语言复习总结</title>
      <link href="/2023/02/11/C%E8%AF%AD%E8%A8%80%E5%A4%8D%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
      <url>/2023/02/11/C%E8%AF%AD%E8%A8%80%E5%A4%8D%E4%B9%A0%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<p>[TOC]</p><h2 id="一、基础零散的知识点"><a href="#一、基础零散的知识点" class="headerlink" title="一、基础零散的知识点"></a>一、基础零散的知识点</h2><ol><li>%11.9f  —  表示共11位，小数点后9位。</li><li>#define  标识符  常量 —宏定义</li><li>\0 代表字符串结束</li><li>数据类型 <ul><li>基本类型<ul><li>整数类型</li><li>浮点类型</li><li>字符类型</li><li>枚举类型</li></ul></li><li>指针类型</li><li>构造类型<ul><li>数组类型</li><li>结构类型</li><li>联合类型</li></ul></li><li>空类型</li></ul></li><li>sizeof(对象 or 类型)sizeof 变量</li><li>signed（带符号）unsigned（不带符号）—0正1负，int默认带符号型</li><li>补码<ul><li>正数：与原码相同</li><li>负数：符号不变，其余位取反后再+1</li></ul></li><li>强制类型转换 — eg: (int)2.0</li><li>条件运算符（三目）：exp1 ? exp2 : exp3; eg: a&gt;b ? a : b</li><li>字符处理函数：<ul><li>strlen() — 获取长度（不包含\0，sizeof包含，如字符串abc，strlen长度为3，sizeof为4。）</li><li>strcpy()和strncpy() — 拷贝（拷贝后需手动追加\0。）</li><li>strcat()和strncat() — 连接（连接后自动追加\0。）</li><li>strcmp()和strncmp() — 比较（若str1&#x3D;str2，则返回零；若str1&lt;str2，则返回负数；若str1&gt;str2，则返回正数。）</li></ul></li><li>&#96;&#96;&#96;c<br>二维数组  int array[][4]  ,后面的4必须确定。<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">## 二、指针部分</span><br><span class="line">1. ```c</span><br><span class="line">     char *pa =&amp;a;  其中&amp;为取地址运算符，打印时%p为地址类型数据，还应避免访问未初始化的指针；</span><br></pre></td></tr></table></figure></li><li>&#96;&#96;&#96;c<br> int *p[5] —指针数组（指针的数组） ， int (*p)[5] — 数组指针（指向数组的指针）<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">3. ```c</span><br><span class="line">     NULL不是NUL，NULL代表空指针，而NUL代表&#x27;\0&#x27;。</span><br></pre></td></tr></table></figure></li><li>&#96;&#96;&#96;c<br>  int **p&#x3D;array；其中array为二维数组，使用p+1会出错，因为不知道数组跨度为多少与二维数组第二个[]必须道理相通。 <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">5. ```c</span><br><span class="line">     指向常量的指针 const int *p; --- 可以指向常量or变量，不可以通过指针修改指向的值。</span><br><span class="line">     常量指针 int * const p=&amp;num; --- p不可被修改，及改变p存储的地址</span><br></pre></td></tr></table></figure></li><li><pre><code class="c">  可变参数 int sum (int n,...);</code></pre></li></ol>]]></content>
      
      
      <categories>
          
          <category> C语言复习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C语言 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
